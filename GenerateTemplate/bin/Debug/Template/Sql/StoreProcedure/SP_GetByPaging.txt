-- =============================================
-- Author:		{Author}
-- Create date: {CreatedDate}
-- Description:	Get List {TableName} Pagging
-- =============================================
CREATE PROCEDURE [{SchemaName}].[sp{TableName}_GetByPaging]
	@pageIndex int,
	@pageSize int,
	@filter nvarchar(2000),
	@sort nvarchar(255),
	@keyword nvarchar(500),
	@totalRecord int out
AS
BEGIN
	DECLARE @pagingQuery nvarchar(2000);
	DECLARE @totalQuery nvarchar(2000);
	
	IF (@sort='')
		BEGIN
			SET @sort = '[{PrimaryKey}]';
		END
	-- get total record
	SET @totalQuery ='SELECT @totalRecordOut = COUNT({PrimaryKey})
					  FROM (SELECT {PrimaryKey} FROM [{SchemaName}].[{TableName}] WHERE (1=1) ';
	IF(@filter<>'')	
		BEGIN
			SET @totalQuery += ' AND ('+@filter + ')';
		END
	IF(@keyword<>'') 
		BEGIN
			SET @totalQuery += ' AND (Name LIKE ''%' + @keyword + '%'' OR Description LIKE ''%' + @keyword + '%'')';
		END
	SET @totalQuery += ') as tmp';	

	--get data by paging
	SET @pagingQuery = 'SELECT A.* FROM 
													(SELECT RowIndex = ROW_NUMBER() OVER (ORDER BY ' +@sort +'), *														
														FROM [{SchemaName}].[{TableName}]
														WHERE (1=1)';
	IF(@filter <> '')
			SET @pagingQuery += ' AND (' + @filter + ')';
	IF(@keyword<>'') 
		BEGIN
			SET @pagingQuery += ' AND (Name LIKE ''%' + @keyword + '%'' OR Description LIKE ''%' + @keyword + '%'')';
		END
	SET @pagingQuery += ') A
						WHERE RowIndex > ' + CAST((@pageIndex-1)*@pageSize AS nvarchar(255)) + ' AND RowIndex <= ' + CAST((@pageIndex)*@pageSize AS nvarchar(255));

	EXECUTE sp_executesql @totalQuery,N'@totalRecordOut int OUTPUT',@totalRecordOut = @totalRecord OUTPUT;
	EXECUTE(@pagingQuery);
END
